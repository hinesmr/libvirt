diff --git a/src/qemu/qemu_command.c b/src/qemu/qemu_command.c
index 854e51c..4f96090 100644
--- a/src/qemu/qemu_command.c
+++ b/src/qemu/qemu_command.c
@@ -7139,6 +7139,14 @@ qemuBuildCommandLine(virConnectPtr conn,
             virCommandAddEnvString(cmd, "QEMU_AUDIO_DRV=none");
     }
 
+    if (cfg->mallocMmapThreshold >= 0) {
+        char *thresh;
+        if (virAsprintf(&thresh, "MALLOC_MMAP_THRESHOLD_=%d", cfg->mallocMmapThreshold) < 0)
+            goto error;
+        virCommandAddEnvString(cmd, thresh);
+        VIR_FREE(thresh);
+    }
+
     if (virQEMUCapsGet(qemuCaps, QEMU_CAPS_DEVICE)) {
         /* Disable global config files and default devices */
         if (virQEMUCapsGet(qemuCaps, QEMU_CAPS_NO_USER_CONFIG))
diff --git a/src/qemu/qemu_conf.c b/src/qemu/qemu_conf.c
index 77ef4fe..846e069 100644
--- a/src/qemu/qemu_conf.c
+++ b/src/qemu/qemu_conf.c
@@ -343,6 +343,13 @@ virQEMUDriverConfigPtr virQEMUDriverConfigNew(bool privileged)
         goto error;
 #endif
 
+    /*
+     * mallopt(3): We will not set the environment variable if it is negative.
+     * User must explicitly request the variable be set to >= 0,
+     * otherwise use default glibc behavior.
+     */
+    cfg->mallocMmapThreshold = -1;
+
     return cfg;
 
  error:
@@ -886,6 +893,11 @@ int virQEMUDriverConfigLoadFile(virQEMUDriverConfigPtr cfg,
         }
     }
 
+    /*
+     * mallopt(3): MALLOC_MMAP_THRESHOLD_
+     */
+    GET_VALUE_LONG("malloc_mmap_threshold", cfg->mallocMmapThreshold);
+
     ret = 0;
 
  cleanup:
diff --git a/src/qemu/qemu_conf.h b/src/qemu/qemu_conf.h
index a714b84..7c5c403 100644
--- a/src/qemu/qemu_conf.h
+++ b/src/qemu/qemu_conf.h
@@ -181,6 +181,9 @@ struct _virQEMUDriverConfig {
     char **loader;
     char **nvram;
     size_t nloader;
+
+    /* mallopt(3) */
+    int mallocMmapThreshold;
 };
 
 /* Main driver state */
